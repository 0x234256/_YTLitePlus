# This file contains the fastlane.tools configuration
#
# 
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane
IPA_NAME="YTLitePlus.ipa"
BUNDLE_ID="com.google.ios.youtube"

TEMP_KEYCHAIN_USER = "temp"
TEMP_KEYCHAIN_PASSWORD = ENV["TEMP_KEYCHAIN_PASSWORD"]

# JWD AppStoreConnect
KEY_ID = ENV["KEY_ID"]
ISSUER_ID = ENV["ISSUER_ID"]
KEY_CONTENT = ENV["KEY_CONTENT"]

# GitKey
GIT_ENCODE = ENV["GIT_ENCODE"]

def delete_temp_keychain(name)

  delete_keychain(
    name: name
  ) if File.exist? File.expand_path("~/Library/Keychains/#{name}-db")
end

def create_temp_keychain(name, password)
  create_keychain(
    name: name,
    password: password,
    unlock: false,
    timeout: 0
  )
end

def ensure_temp_keychain(name, password)
  delete_temp_keychain(name)
  create_temp_keychain(name, password)
end

default_platform(:ios)

platform :ios do

  desc "Sing IPA for adhoc"
  lane :adhoc do

    begin

     app_store_connect_api_key(
        key_id: KEY_ID,
        issuer_id: ISSUER_ID,
        key_content: KEY_CONTENT,
        is_key_content_base64: true,
        duration: 1200, 
        in_house: false
      )

      keychain_name = TEMP_KEYCHAIN_USER
      keychain_password = TEMP_KEYCHAIN_PASSWORD
      ensure_temp_keychain(keychain_name, keychain_password)

      match(
        type: "adhoc",
        git_basic_authorization: "#{GIT_ENCODE}", 
        readonly: false,
        keychain_name: keychain_name,
        keychain_password: keychain_password,
        # force: true,
        force_for_new_devices: true
      )

      app_identifier = BUNDLE_ID

      match_type = "adhoc" 
      profile_var = "sigh_com.google.ios.*_#{match_type}_profile-path"
      cert_var    = "sigh_com.google.ios.*_#{match_type}_certificate-name"

      name_profile = ENV[profile_var]
      name_cert    = ENV[cert_var]

      puts "SIGH_NAME: #{name_profile}"
      puts "CERT_CERTIFICATE_ID: #{name_cert}"

      build_time = Time.now.to_i
      puts "Build Time (in seconds): #{build_time}"

      resign(
        ipa:IPA_NAME,
        signing_identity: name_cert,
        provisioning_profile: name_profile,
        bundle_id: app_identifier,
          provisioning_profile: {
            app_identifier => name_profile,
            "com.google.ios.youtube.OpenYoutube.Extension" => name_profile,
            "com.google.ios.youtube.ShareExtension" => name_profile
        },
        # bundle_version:  "#{build_time}", 
        # short_version 1.0,
        use_app_entitlements: true
        #
      )

    ensure
      delete_temp_keychain(keychain_name)
    end
  end
end
